{"version":3,"sources":["Containers/Chat/index.module.css","Components/SingleMessage/index.module.css","Containers/App/index.module.css","Components/ModalUserName/index.module.css","Components/Messages/index.module.css","Components/ModalUserName/index.js","Components/SingleMessage/index.js","Components/Messages/index.js","Components/User/index.js","Components/OnlineUsers/index.js","Containers/Chat/index.js","Containers/App/index.js","index.js"],"names":["module","exports","wrapper","Chat","topSection","Messages","OnlineUsers","usersTitle","Form","SingleMessage","from","body","blue","App","ModalUserName","props","setUserNameHandler","react_default","a","createElement","className","classes","onSubmit","type","placeholder","name","_ref","fromBlock","liClass","msg","useContext","MyContext","concat","ul","useRef","useEffect","current","scrollTop","scrollHeight","messages","ref","map","ind","Components_SingleMessage","key","User","user","users","Components_User","state","onlineUsers","ws","sid","handleSubmit","event","preventDefault","bc","target","elements","value","_this","send","JSON","stringify","_this2","this","WebSocket","onopen","console","log","onclose","wasClean","code","reason","offline","userName","onerror","message","onmessage","data","response","parse","SID","auth","setID","passwd","cmd","bid","online","req","FROM","setState","includes","Object","toConsumableArray","index","indexOf","splice","Components_Messages","Components_OnlineUsers","Component","React","createContext","nickname","modal","chat","Containers_Chat","Components_ModalUserName","Provider","ReactDOM","render","Containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.2919804b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Chat_wrapper__2s4wS\",\"Chat\":\"Chat_Chat__2PyNt\",\"topSection\":\"Chat_topSection__3qrAt\",\"Messages\":\"Chat_Messages__2zESZ\",\"OnlineUsers\":\"Chat_OnlineUsers__2klAx\",\"usersTitle\":\"Chat_usersTitle__1DCtG\",\"Form\":\"Chat_Form__28taY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SingleMessage\":\"SingleMessage_SingleMessage__2L7Mp\",\"from\":\"SingleMessage_from__2rDQB\",\"body\":\"SingleMessage_body__2pwJv\",\"blue\":\"SingleMessage_blue__3uVFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1XRpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ModalUserName_wrapper__1vLwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__LRaPM\"};","import React from 'react';\r\nimport classes from './index.module.css'\r\n\r\nconst ModalUserName = (props) => {\r\n    const {setUserNameHandler} = props;\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <form onSubmit={setUserNameHandler}>\r\n                <input type=\"text\" placeholder=\"Your nickname\" name=\"nickname\" />\r\n                <button type=\"submit\">Ok</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalUserName;","import React, {useContext} from 'react';\r\nimport classes from './index.module.css';\r\nimport {MyContext} from \"../../Containers/App\";\r\n\r\nconst SingleMessage = ({msg}) => {\r\n    let fromBlock;\r\n    let liClass;\r\n    const nick = useContext(MyContext);\r\n\r\n    if (nick !== msg.from) {\r\n        fromBlock = (\r\n            <div className={classes.from}>\r\n            {msg.from}\r\n            </div>\r\n        );\r\n        liClass = classes.SingleMessage;\r\n    } else {\r\n        liClass = `${classes.SingleMessage} ${classes.blue}`;\r\n    }\r\n    return (\r\n        <li className={liClass}>\r\n            {fromBlock}\r\n            <div className={classes.body}>\r\n                {msg.body}\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default SingleMessage;","import React, {useEffect, useRef} from 'react';\r\nimport SingleMessage from \"../SingleMessage\";\r\nimport classes from './index.module.css';\r\n\r\nconst Messages = (props) => {\r\n    const ul = useRef(null);\r\n    useEffect( ()=>{\r\n        ul.current.scrollTop = ul.current.scrollHeight;\r\n    }, [props.messages] );\r\n    return (\r\n        <ul ref={ul} className={classes.Messages}>\r\n            {props.messages.map( (msg,ind) => <SingleMessage key={ind} msg={msg}/> )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\n\r\nconst User = ({user}) => {\r\n    return (\r\n        <li>\r\n            {user}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport User from \"../User\";\r\n\r\nconst OnlineUsers = ({users}) => {\r\n    return (\r\n        <ul>\r\n            {users.map((user, ind) => <User key={ind} user={user} />)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default OnlineUsers;","import React, {Component} from 'react';\r\nimport classes from './index.module.css';\r\nimport Messages from '../../Components/Messages';\r\nimport OnlineUsers from \"../../Components/OnlineUsers\";\r\n\r\nclass Chat extends Component {\r\n\r\n    state = {\r\n        messages: [],\r\n        onlineUsers: []\r\n    };\r\n    ws = null;\r\n    sid = null;\r\n\r\n    componentDidMount() {\r\n        this.ws = new WebSocket('ws://achex.ca:4010');\r\n        let ws = this.ws;\r\n        ws.onopen = (event) => {\r\n            console.log(event);\r\n        };\r\n\r\n        ws.onclose = (event) => {\r\n            if (event.wasClean) {\r\n                console.log(\"Closed correctly\");\r\n            } else {\r\n                console.log(\"Connection broke\");\r\n            }\r\n            console.log(`Code: ${event.code}, reason: ${event.reason}`);\r\n            ws.send(JSON.stringify({bc:'maxchat', offline: this.props.userName}));\r\n            };\r\n\r\n        ws.onerror = (event) => {\r\n            console.log(event.message);\r\n        };\r\n\r\n        ws.onmessage = (event) => {\r\n            console.log(event.data);\r\n            let response = JSON.parse(event.data);\r\n            if (response.SID) {\r\n                this.SID = response.SID;\r\n                let auth = {\"setID\":this.props.userName,\"passwd\":\"12345678\"};\r\n                ws.send(JSON.stringify(auth));\r\n            }\r\n            if (response.auth) {\r\n                console.log(response.auth);\r\n                ws.send(JSON.stringify({cmd:'register_broadcast', bid:'maxchat'}));\r\n                ws.send(JSON.stringify({bc:'maxchat', online: this.props.userName, req:'info'}))\r\n            }\r\n\r\n            if (response.msg) {\r\n                let msg = {\r\n                    from: response.FROM,\r\n                    body: response.msg\r\n                };\r\n                this.setState({\r\n                    messages: this.state.messages.concat(msg)\r\n                });\r\n            }\r\n\r\n            if (response.online) {\r\n                if ( !this.state.onlineUsers.includes(response.online) ) {\r\n                    if (response.online !== this.props.userName) {\r\n                        ws.send(JSON.stringify({bc:'maxchat', online: this.props.userName, req:'info'}));\r\n                    }\r\n                    this.setState({\r\n                        onlineUsers: this.state.onlineUsers.concat(response.online)\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (response.offline) {\r\n                let onlineUsers = [...this.state.onlineUsers];\r\n                let index = onlineUsers.indexOf(response.offline);\r\n                onlineUsers.splice(index, 1);\r\n                this.setState({\r\n                    onlineUsers\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let msg = {\r\n            bc: 'maxchat',\r\n            msg: event.target.elements.msg.value,\r\n        };\r\n        event.target.elements.msg.value = \"\";\r\n        this.ws.send(JSON.stringify(msg));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.wrapper}>\r\n                <div className={classes.Chat}>\r\n                    <div className={classes.topSection}>\r\n                        <div className={classes.Messages}>\r\n                            <Messages messages={this.state.messages} />\r\n                        </div>\r\n                        <div className={classes.OnlineUsers}>\r\n                            <div className={classes.usersTitle}>Online users:</div>\r\n                            <OnlineUsers users={this.state.onlineUsers} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <form className={classes.Form} onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" placeholder=\"Message...\" name=\"msg\" />\r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import React, {Component} from 'react';\nimport classes from './index.module.css';\nimport ModalUserName from '../../Components/ModalUserName';\nimport Chat from \"../Chat\";\n\nconst MyContext = React.createContext('');\n\nclass App extends Component {\n    state = {\n        userName: \"\"\n    };\n\n    setUserNameHandler = (event) => {\n        event.preventDefault();\n        let nick = event.target.elements.nickname.value;\n        if (nick) {\n            this.setState({userName: event.target.elements.nickname.value})}\n    };\n\n    render() {\n        const {state: {userName}, setUserNameHandler} = this;\n        let modal;\n        let chat;\n        if (!this.state.userName) {\n            modal = <ModalUserName {...{userName, setUserNameHandler}}/>;\n        } else {\n            chat = <Chat {...{userName}}/>;\n        }\n        return (\n            <MyContext.Provider value={this.state.userName}>\n                <div className={classes.App}>\n                    {modal}\n                    {chat}\n                </div>\n            </MyContext.Provider>\n        );\n    }\n}\n\nexport default App;\nexport {MyContext};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}